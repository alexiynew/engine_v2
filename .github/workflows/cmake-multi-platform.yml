# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      # Set up a matrix
      matrix:
        os: [ubuntu-latest, windows-latest]
        preset: [visual-studio, ninja, ninja-multi]
        compiler: [gcc, clang, cl]
        build_type: [release, debug]
        #include:
          # nothing, all configs should be in presets
        exclude:
          - os: windows-latest
            compiler: clang
          - os: ubuntu-latest
            compiler: cl
          - os: ubuntu-latest
            preset: visual-studio

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings for Visual Studio
      id: strings
      shell: bash
      if: matrix.preset == 'visual-studio'
      run: |
        echo "config-preset=${{ matrix.preset }}" >> "$GITHUB_OUTPUT"
        echo "build-preset=${{ matrix.preset }}-${{ matrix.build_type }}" >> "$GITHUB_OUTPUT"

    - name: Set reusable strings for Ninja
      id: strings
      shell: bash
      if: matrix.preset == 'ninja'
      run: |
        echo "config-preset=${{ matrix.preset }}-${{ matrix.compiler }}-${{ matrix.build_type }}" >> "$GITHUB_OUTPUT"
        echo "build-preset=${{ matrix.preset }}-${{ matrix.compiler }}-${{ matrix.build_type }}" >> "$GITHUB_OUTPUT"

    - name: Set reusable strings for Ninja Multi-Config
      id: strings
      shell: bash
      if: matrix.preset == 'ninja-multi'
      run: |
        echo "config-preset=${{ matrix.preset }}-${{ matrix.compiler }}" >> "$GITHUB_OUTPUT"
        echo "build-preset=${{ matrix.preset }}-${{ matrix.compiler }}-${{ matrix.build_type }}" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake --preset=${{ steps.strings.outputs.config-preset }}
        -B ${{ github.workspace }}/build/${{ steps.strings.outputs.config-preset }}
        -DENABLE_CPPCHECK=OFF
        -DUSE_STUB_BACKEND=ON
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build --preset=${{ steps.strings.outputs.build-preset }} --target=all

    - name: Test
      working-directory: ${{ github.workspace }}/build/${{ steps.strings.outputs.config-preset }}
      run: ctest --build-config ${{ matrix.build_type }} --verbose --output-on-failure
