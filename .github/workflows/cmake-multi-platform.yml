# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      # Set up a matrix
      matrix:
        os: [ubuntu-latest, windows-latest]
        preset: [ninja-multi, windows-only, ninja]
        build_type: [Release, Debug]
        compiler: [gcc, clang, cl]
        include:
          # Windows configurations
          - os: windows-latest
            preset: windows-only
            generator: "Visual Studio 17 2022"
            compiler: cl
            c_compiler: cl
            cpp_compiler: cl
          - os: windows-latest
            preset: ninja
            generator: "Ninja"
            compiler: cl
            c_compiler: cl
            cpp_compiler: cl
          - os: windows-latest
            preset: ninja-multi
            generator: "Ninja Multi-Config"
            compiler: cl
            c_compiler: cl
            cpp_compiler: cl

          # Linux configurations
          - os: ubuntu-latest
            preset: ninja
            generator: "Ninja"
            compiler: gcc
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            preset: ninja
            generator: "Ninja"
            compiler: clang
            c_compiler: clang
            cpp_compiler: clang++
          - os: ubuntu-latest
            preset: ninja-multi
            generator: "Ninja Multi-Config"
            compiler: gcc
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            preset: ninja-multi
            generator: "Ninja Multi-Config"
            compiler: clang
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            compiler: gcc
          - os: windows-latest
            compiler: clang
          - os: ubuntu-latest
            compiler: cl
          - os: ubuntu-latest
            preset: windows-only

    steps:
    - uses: actions/checkout@v4

    - name: Install Ninja (Linux)
      if: matrix.os == 'ubuntu-latest' && matrix.preset == 'ninja'
      run: sudo apt-get install -y ninja-build

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build/${{ matrix.preset }}-${{ matrix.compiler }}" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake --preset=${{ matrix.preset }}
        -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DENABLE_CPPCHECK=OFF
        -DUSE_STUB_BACKEND=ON
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build --preset=${{ matrix.preset }}-${{ lower(matrix.build_type) }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }} --verbose --output-on-failure
